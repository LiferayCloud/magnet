#!/usr/bin/env node

import pkg from '../../package.json';
import chokidar from 'chokidar';
import {join} from 'path';
import {spawn} from 'cross-spawn';

const defaultCommand = 'dev';
const commands = new Set([
  'start',
  'generate',
  defaultCommand,
]);

let cmd = process.argv[2];
let args;

if (new Set(['--version', '-v']).has(cmd)) {
  console.log(`magnet.js v${pkg.version}`);
  process.exit(0);
}

if (new Set(['--help', '-h']).has(cmd)) {
  console.log(`
    Usage
      $ magnet <command>

    Available commands
      ${Array.from(commands).join(', ')}

    For more information run a command with the --help flag
      $ magnet start --help
  `);
  process.exit(0);
}

if (commands.has(cmd)) {
  args = process.argv.slice(3);
} else {
  cmd = defaultCommand;
  args = process.argv.slice(2);
}

const bin = join(__dirname, 'magnet-' + cmd);

const startProcess = () => {
  const proc = spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]});
  proc.on('close', (code, signal) => {
    if (code !== null) {
      process.exit(code);
    }
    if (signal) {
      if (signal === 'SIGKILL') {
        process.exit(137);
      }
      console.log(`exitting`);
      process.exit(1);
    }
    process.exit(0);
  });
  proc.on('error', (err) => {
    console.error(err);
    process.exit(1);
  });
  return proc;
};

let proc = startProcess();

if (cmd === 'dev') {
    const watcher = chokidar.watch('**/*', {
      ignoreInitial: true,
    });

    watcher.on('change', (a, b) => {
      console.log('\n> Found a change, restarting the server...');
      proc.removeAllListeners('close');
      proc.kill();
      proc = startProcess();
    });
}
