#!/usr/bin/env node

import {getRoutesTable} from '../routes';
import {Magnet} from '../';
import log from '../log';
import parseArgs from 'minimist';

process.env.NODE_ENV = process.env.NODE_ENV || 'development';

process.stdin.pause();

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    h: 'help',
    c: 'config',
    C: 'config-dir',
  },
  boolean: ['h'],
});

if (argv.help) {
  console.log(`
    Description
      Builds and starts the application in development mode.
    Usage
      $ magnet dev [-c <config file path>] [-C <config dir>]
    Options
      --config, -c        Config file path [default: magnet.config.js]
      --config-dir, -C    Directory to load configuration files from
      --help, -h          Displays this message
  `);
  process.exit(0);
}

const config = argv['config'];
const configDir = argv['config-dir'];
const directory = process.cwd();
const magnet = new Magnet({config, configDir, directory});

magnet.build()
  .then(() => {
    const routes = getRoutesTable(magnet);
    if (routes) {
      log.infoNoPrefix(false, `\n${routes}\n`);
    }
  })
  .then(() => magnet.start())
  .catch((error) => {
    if (error.code === 'EADDRINUSE') {
      const errorMessage = `Port ${argv.port} is already in use.`;
      log.error(false, errorMessage);
    } else {
      log.error(false, error);
    }
    process.nextTick(() => process.exit(1));
  });

process.on('SIGTERM', (error) => {
  if (magnet) magnet.stop();
});

process.on('SIGINT', (error) => {
  if (magnet) magnet.stop();
  process.nextTick(() => process.exit(1));
});
